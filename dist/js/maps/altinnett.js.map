{"version":3,"sources":["setupTruncateLines.js","popover.js","altinnLoader.js","altinnModal.js","togglePanel.js","altinnett-init.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../altinnett.js","sourcesContent":["var setupTruncateLines = function() {\n  setTimeout(function() {\n    // Max two lines for all screen sizes\n    $('.a-js-truncate-2').truncate({\n      lines: 2\n    });\n    // Max two lines for screen sizes less than 768\n    // Intit with 3 lines instead of 2 for IE11\n    if (!!window.MSInputMethodContext\n      && !!document.documentMode\n      && window.innerWidth < 768) {\n      $('.a-js-truncate-2-sm-down').truncate({\n        lines: 3\n      });\n    } else {\n      $('.a-js-truncate-2-sm-down').truncate({\n        lines: 2\n      });\n    }\n  }, 1);\n\n  $(window).resize(function() {\n    // Max two lines for all screen sizes\n    $('.a-js-truncate-2').truncate('collapse');\n    $('.a-js-truncate-2').truncate('update');\n\n    // Max two lines for screen sizes less than 768\n    if (window.innerWidth < 768) {\n      $('.a-js-truncate-2-sm-down').truncate('collapse');\n      $('.a-js-truncate-2-sm-down').truncate('update');\n    } else {\n      $('.a-js-truncate-2-sm-down').truncate('expand');\n    }\n  });\n\n  $('.a-collapsePanel-body').on('shown.bs.collapse', function() {\n    var el = $(this).siblings('.a-collapsePanel-heading').find('.a-js-truncate-2-sm-down');\n    if (window.innerWidth < 768) {\n      el.truncate('expand');\n    }\n  });\n\n  $('.a-collapsePanel-body').on('hide.bs.collapse', function() {\n    var el = $(this).siblings('.a-collapsePanel-heading').find('.a-js-truncate-2-sm-down');\n    if (window.innerWidth < 768) {\n      el.truncate('collapse');\n    }\n  });\n};\n","/* globals $ */\nvar popoverLocalInit = function() {\n  var options = {\n    html: true,\n    placement: function(context, source) {\n      var position = $(source).offset();\n      $(context).addClass($(source).attr('data-popover-class'));\n      if ($(source).hasClass('a-js-popoverBig')) {\n        return 'bottom';\n      }\n      if (position.left < 125) {\n        return 'right';\n      }\n      if (position.left > ($(document).width() - $(source).width() - 125)) {\n        return 'left';\n      }\n      return 'bottom';\n    },\n    content: function() {\n      if ($(this).attr('data-popover-content')) {\n        return $('#' + $(this).data('popover-content')).html();\n      }\n      return false;\n    },\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"popover-arrow\"></div><div class=\"popover-content\"></div></div>'\n  };\n\n  $('[data-toggle=\"popover\"]').popover(options);\n\n  $('.a-js-togglePopoverIcons').each(function() {\n    // $(this).find('i').eq(1).hide();\n    $(this).find('.a-js-popoverIconExpanded').hide();\n  });\n\n  $('.a-js-popoverIconExpanded').on('click', function() {\n    $('.a-js-popoverIconExpanded').hide();\n    $('.a-js-popoverIconInitial').show();\n    // $(this).hide();\n    // $('.a-js-popoverIconInitial').show();\n  });\n  $('.a-js-popoverIconInitial').on('click', function() {\n    $(this).hide();\n    $(this).parent().find('.a-js-popoverIconExpanded').show();\n  });\n};\n\nvar forceFocusTriggerElement;\nvar popoverGlobalInit = function() {\n  $('body').on('show.bs.popover', '[data-toggle=\"popover\"].a-js-tabable-popover', function(e) {\n    var triggerElement = this;\n    $(triggerElement).closest('.a-modal').scrollTop(0);\n  });\n\n  $('body').on('shown.bs.popover', '[data-toggle=\"popover\"].a-js-tabable-popover', function(e) {\n    var triggerElement = this;\n    setTimeout(function() {\n      $(triggerElement).after($($(triggerElement).data('bs.popover').tip));\n      $(triggerElement).closest('.a-modal').one('scroll', function() {\n        $('[data-toggle=\"popover\"]').popover('hide');\n      });\n    }, 0);\n  });\n\n  $('body').on('shown.bs.popover', '[data-toggle=\"popover\"].a-js-popover-forceFocus', function(e) {\n    $('body').append($('<button class=\"sr-only a-js-popoverTrick\">ignoreme</button>'));\n    forceFocusTriggerElement = this;\n    $(forceFocusTriggerElement).one('blur', function() {\n      var that = this;\n      if (forceFocusTriggerElement) {\n        $($(this).data('bs.popover').tip).find('button,input,a,textarea').filter(':visible:first').focus();\n      }\n    });\n  });\n\n  $('body').on('hidden.bs.popover', '[data-toggle=\"popover\"].a-js-popover-forceFocus', function(e) {\n    $('body').find('.a-js-popoverTrick').remove();\n  });\n\n  // hides popover when the cehckbutton is checked\n  $('body').on('focus', '[data-toggle=\"popover\"].sr-only', function(e) {\n    if ($(this).is(':checked')) {\n      $(this).popover('hide');\n    } else {\n      $(this).popover('show');\n    }\n  });\n\n  // show/hide popover on checkbutton change\n  $('body').on('change', 'a-switch[data-toggle=popover]', function() {\n    if ($(this).is(':checked')) {\n      $(this).popover('hide');\n    } else {\n      $(this).popover('show');\n    }\n  });\n\n  // Hide all existing popovers when opening a new popover\n  $('body').on('click', '[data-toggle=\"popover\"]', function(e) {\n    $('[data-toggle=\"popover\"]').not(this).popover('hide');\n  });\n\n  // Hide all existing popovers when focusing a new element\n  // which is not the open popover or any of its content\n  $('body').on('blur', '[data-toggle=\"popover\"], .popover *', function(e) {\n    setTimeout(function() {\n      var $focused = $(':focus');\n      if ((($focused.length !== 0 || forceFocusTriggerElement)\n        && !$focused.hasClass('popover')\n        && !$focused.parents('.popover').length >= 1) || $focused.hasClass('a-js-popoverTrick')) {\n        if (forceFocusTriggerElement) {\n          $(forceFocusTriggerElement).focus();\n          forceFocusTriggerElement = false;\n        }\n        // disable blur when in modal to allow use of non-original scrollbar\n        if ($('.modal.show').length > 0) {\n          $('.popover-big[data-toggle=\"popover\"]').popover('hide');\n        }\n      }\n    }, 0);\n  });\n\n  // Hide popovers when clicking on something else than the trigger element\n  // and the popover itself\n  $('body').on('click', function(e) {\n    if ($(e.target).data('toggle') !== 'popover'\n      && $(e.target).parents('[data-toggle=\"popover\"]').length === 0\n      && $(e.target).parents('.popover.show').length === 0) {\n      $('[data-toggle=\"popover\"]').popover('hide');\n      forceFocusTriggerElement = false;\n      $(this).parent().find('.a-js-popoverIconInitial').show();\n      $(this).parent().find('.a-js-popoverIconExpanded').hide();\n    }\n  });\n\n  function resetTranslate() {\n    $('.popover-big').attr('style', $('.popover-big').attr('style').replace(/translateX\\(.*?\\)/, 'translateX(0px)'));\n  }\n\n  function adjustBig() {\n    var modalHeight;\n    var padding;\n    if ($('.popover-big').length > 0) {\n      if ($('.modal.show').length > 0) {\n        // Add padding to make sure modal is big enough to contain popover\n        modalHeight = $('.modal-dialog').height() + $('.modalPage').height();\n        padding = ($('.popover').offset().top + $('.modal').scrollTop() + $('.popover').height() + 5) - modalHeight;\n        $('.modalPage').css('padding-bottom', padding + 'px');\n        // tranlate is somehow added by Bootstrap later when in modal??\n        setTimeout(resetTranslate, 0);\n      } else {\n        resetTranslate();\n      }\n    }\n  }\n\n  $('body').on('shown.bs.popover', '.a-js-persistPopover', function() {\n    $('.popover-arrow').html('<style>.popover-big:after { left: ' + ($(this).offset().left + 10.5) + 'px !important; }</style>');\n    $('html, body').animate({\n      scrollTop: $('.a-js-persistPopover').offset().top - 50\n    }, 250);\n\n    // bind scroll wheel to modal popover\n    if ($('.modal.show').length > 0) {\n      $('.popover-big').bind('wheel', function(e) {\n        var scrollTo;\n        if (e.originalEvent.deltaY > 0 || e.originalEvent.deltaY < 0) {\n          scrollTo = (e.originalEvent.deltaY) + $('.modal').scrollTop();\n          $('.modal').scrollTop(scrollTo);\n        }\n      });\n    }\n\n    adjustBig();\n  });\n\n  // clean up modal page fix\n  $('body').on('hidden.bs.popover', 'a-js-persistPopover', function(e) {\n    $('.modalPage').css('padding-bottom', '0px');\n  });\n\n  $(window).scroll(adjustBig);\n  $('.modal').scroll(adjustBig);\n  $(window).resize(adjustBig);\n};\n","/* globals AltinnLoader:true */\n\nAltinnLoader = {\n  addLoader: function($target) {\n    if ($target.find('.loader-container').length === 0) {\n      $target.prepend('<div class=\"loader-container\"><div class=\"loader loader-ellipsis\"></div></div>');\n    }\n  },\n\n  removeLoader: function($target) {\n    $target.find('.loader-container').remove();\n  }\n};\n","/* globals currentRequest, popoverLocalInit, AltinnModal */\n/* globals AltinnModal:true, AltinnLoader */\nAltinnModal = {\n  closeModal: function(settings) {\n    $('body').removeClass('a-modal-background-error a-displayNav');\n    $('body').removeClass('a-modal-background-success');\n    $(settings.target).modal('hide');\n    $('body').append($('.a-stickyHelp-container'));\n  },\n\n  loadModal: function(settings) {\n    var currentRequest = $.ajax({\n      url: settings.url,\n      beforeSend: function() {\n        if (typeof currentRequest !== 'undefined') {\n          currentRequest.abort();\n        }\n\n        AltinnLoader.addLoader($('body'));\n      },\n      data: settings.data\n    }).always(function() {\n    }).done(function(data) {\n      var modalPage = $('<div/>', {\n        class: 'modalPage',\n        html: data\n      });\n      var page = $('<div/>', {\n        class: 'a-page a-current-page',\n        data: {\n          pageIndex: 1,\n          isSuccess: settings.isSuccess,\n          isError: settings.isError,\n          showModalNav: settings.showModalNav\n        },\n        html: modalPage\n      });\n\n      $('body').removeClass('a-modal-background-error a-displayNav');\n      $('body').removeClass('a-modal-background-success');\n\n      // if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\n      //   goToModalHeader();\n      // }\n\n      $(settings.target + ' .a-modal-content-target').append(page);\n      $(settings.target).find('.a-current-page').first().data().enableDirtyPopover = settings.enableDirtyPopover;\n\n      // Initialize with backdrop: static to prevent modal from closing when clicking outside,\n      // and keyboard: false to prevent ESC from closing the modal\n      $(settings.target).modal({\n        backdrop: 'static',\n        keyboard: false\n      });\n\n      $(settings.target).on('hidden.bs.modal', function() {\n        $(settings.target + ' .a-modal-content-target').empty();\n        $(settings.target).attr('aria-hidden', true);\n        $('#altinnModal').siblings('.row').removeClass('d-none');\n      });\n\n      $(settings.target).on('shown.bs.modal', function() {\n        $(settings.target).removeAttr('aria-hidden');\n        $('#altinnModal').siblings('.row').addClass('d-none');\n      });\n      popoverLocalInit();\n\n      if (settings.isError) {\n        $('body').addClass('a-modal-background-error');\n        if (settings.showModalNav) {\n          $('body').addClass('a-displayNav');\n        }\n      } else if (settings.isSuccess) {\n        $('body').addClass('a-modal-background-success');\n      }\n\n      AltinnLoader.removeLoader($('body'));\n      // causes issues in IE11 (blinking quickhelp when modal is open)\n      // $(settings.target).on('transitionend', function() {\n      // $(settings.target).append($('.a-stickyHelp-container'));\n      // });\n    });\n  },\n\n  nextModalPageWithContent: function(settings) {\n    var current;\n    var modalPage = $('<div/>', {\n      class: 'modalPage',\n      html: settings.content\n    });\n\n    var existingPages;\n    var newPage;\n    var newPageIndex;\n\n    existingPages = $(settings.target + ' :data(page-index)');\n\n    if (settings.clearHistory) {\n      newPageIndex = 1;\n    } else {\n      newPageIndex = existingPages.length + 1;\n    }\n\n    if (settings.clearHistory) {\n      $(settings.target + ' :data(page-index)').not('.a-current-page').remove();\n    }\n\n    newPage = $('<div/>', {\n      class: 'a-page a-next-page',\n      data: {\n        pageIndex: newPageIndex,\n        isSuccess: settings.isSuccess,\n        isError: settings.isError,\n        showModalNav: settings.showModalNav\n      },\n      html: modalPage\n    });\n\n    // if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\n    //   goToModalHeader();\n    // }\n\n    $(settings.target + ' .a-modal-content-target').append(newPage);\n\n    $(settings.target).animate({\n      scrollTop: 0\n    }, 20);\n\n    current = $(settings.target + ' .a-current-page');\n\n    setTimeout(function() {\n      $('body').removeClass('a-modal-background-error a-displayNav');\n      $('body').removeClass('a-modal-background-success');\n\n      current.removeClass('a-current-page').addClass('a-previous-page');\n      newPage.removeClass('a-next-page').addClass('a-current-page');\n      $(newPage).data().enableDirtyPopover = settings.enableDirtyPopover;\n\n      if (settings.isError) {\n        $('body').addClass('a-modal-background-error');\n        if (settings.showModalNav) {\n          $('body').addClass('a-displayNav');\n        }\n      } else if (settings.isSuccess) {\n        $('body').addClass('a-modal-background-success');\n      }\n    }, 0);\n\n    current.on('transitionend', function() {\n      if (settings.clearHistory) {\n        $(settings.target + ' :data(page-index)').not('.a-current-page').remove();\n      } else {\n        current.hide().off();\n      }\n    });\n\n    popoverLocalInit();\n  },\n\n  nextModalPage: function(settings) {\n    var currentRequest = $.ajax({\n      url: settings.url,\n      beforeSend: function() {\n        if (typeof currentRequest !== 'undefined') {\n          currentRequest.abort();\n        }\n        AltinnLoader.addLoader($(settings.target).find('.a-current-page .a-modal-body'));\n      },\n      data: settings.data\n    }).always(function() {\n    }).done(function(data) {\n      var current;\n      var modalPage = $('<div/>', {\n        class: 'modalPage',\n        html: data\n      });\n\n      var existingPages;\n      var newPage;\n      var newPageIndex;\n\n      existingPages = $(settings.target + ' :data(page-index)');\n\n      if (settings.clearHistory) {\n        newPageIndex = 1;\n      } else {\n        newPageIndex = existingPages.length + 1;\n      }\n\n      if (settings.clearHistory) {\n        $(settings.target + ' :data(page-index)').not('.a-current-page').remove();\n      }\n\n      newPage = $('<div/>', {\n        class: 'a-page a-next-page',\n        data: {\n          pageIndex: newPageIndex,\n          isSuccess: settings.isSuccess,\n          isError: settings.isError,\n          showModalNav: settings.showModalNav\n        },\n        html: modalPage\n      });\n\n      // if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\n      //   goToModalHeader();\n      // }\n\n      $(settings.target + ' .a-modal-content-target').append(newPage);\n\n      $(settings.target).animate({\n        scrollTop: 0\n      }, 20);\n\n      current = $(settings.target + ' .a-current-page');\n\n      setTimeout(function() {\n        $('body').removeClass('a-modal-background-error a-displayNav');\n        $('body').removeClass('a-modal-background-success');\n\n        current.removeClass('a-current-page').addClass('a-previous-page');\n        newPage.removeClass('a-next-page').addClass('a-current-page');\n        $(newPage).data().enableDirtyPopover = settings.enableDirtyPopover;\n\n        if (settings.isError) {\n          $('body').addClass('a-modal-background-error');\n          if (settings.showModalNav) {\n            $('body').addClass('a-displayNav');\n          }\n        } else if (settings.isSuccess) {\n          $('body').addClass('a-modal-background-success');\n        }\n      }, 0);\n\n      current.on('transitionend', function() {\n        if (settings.clearHistory) {\n          $(settings.target + ' :data(page-index)').not('.a-current-page').remove();\n        } else {\n          current.hide().off();\n        }\n\n        AltinnLoader.removeLoader(current.find('.a-modal-body'));\n      });\n\n      popoverLocalInit();\n    });\n  },\n\n  previousModalPage: function(settings) {\n    var current;\n    var allPages;\n    var previous;\n    var pagesToPop;\n    var isError;\n    var showModalNav;\n    var isSuccess;\n\n    if (!settings.pagesToPop) {\n      pagesToPop = 1;\n    } else {\n      pagesToPop = settings.pagesToPop;\n    }\n\n    if ($(settings.target + ' .a-current-page').data('page-index') - pagesToPop <= 0) {\n      $(settings.target).one('hidden.bs.modal', function() {\n        $('body').removeClass('a-modal-background-error a-displayNav');\n        $('body').removeClass('a-modal-background-success');\n      });\n\n      $(settings.target).modal('hide');\n      return;\n    }\n\n    current = $(settings.target + ' .a-current-page');\n    allPages = $(settings.target + ' :data(page-index)');\n    previous = allPages.filter(function() {\n      return $(this).data('page-index') === allPages.length - 1;\n    });\n\n    previous.show();\n    isError = $(previous).data().isError;\n    showModalNav = $(previous).data().showModalNav;\n    isSuccess = $(previous).data().isSuccess;\n\n    current.addClass('a-next-page');\n    current.removeClass('a-current-page');\n\n    // if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\n    //   goToModalHeader();\n    // }\n\n    setTimeout(function() {\n      $('body').removeClass('a-modal-background-error a-displayNav');\n      $('body').removeClass('a-modal-background-success');\n\n      previous.addClass('a-current-page').removeClass('a-previous-page');\n\n      if (isError) {\n        $('body').addClass('a-modal-background-error');\n        if (showModalNav) {\n          $('body').addClass('a-displayNav');\n        }\n      } else if (isSuccess) {\n        $('body').addClass('a-modal-background-success');\n      }\n    }, 0);\n\n    current.on('transitionend', function() {\n      var previousPages = allPages.filter(function() {\n        return $(this).data('page-index') > allPages.length - pagesToPop;\n      });\n      previousPages.remove();\n    });\n  },\n\n  setCurrentPageIsDirty: function(target, state) {\n    $(target).find('.a-current-page').first().data().isDirty = state;\n  },\n\n  init: function() {\n    var that = this;\n    $('body').on('click', '[data-toggle=\"altinn-modal\"]', function() {\n      var $source = $(this);\n      if ($source.data().action === 'load') {\n        that.loadModal({\n          url: $source.data().url,\n          target: $source.data().target,\n          enableDirtyPopover: $source.data().enableDirtyPopover\n        });\n      } else if ($source.data().action === 'next') {\n        that.nextModalPage({ url: $source.data().url,\n          target: $source.data().target,\n          isSuccess: $source.data().isSuccess,\n          isError: $source.data().isError,\n          showModalNav: $source.data().showModalNav,\n          clearHistory: $source.data().clearHistory,\n          enableDirtyPopover: $source.data().enableDirtyPopover });\n      } else if ($source.data().action === 'back') {\n        that.previousModalPage({\n          target: $source.data().target,\n          pagesToPop: $source.data().pages\n        });\n      } else if ($source.data().action === 'close') {\n        that.closeModal({ target: $source.data().target });\n      }\n    });\n\n    $('body').on('click', '.a-modal-back', function() {\n      var $modal = $(this).closest('.a-modal');\n      if ($modal.find('.a-current-page').first().data().enableDirtyPopover\n        && $modal.find('.a-current-page').first().data().isDirty) {\n        $(this).popover('show');\n      } else {\n        that.previousModalPage({ target: '#' + $modal[0].id });\n      }\n    });\n\n    $('body').on('click', '.a-modal-close', function() {\n      var $modal = $(this).closest('.a-modal');\n      if ($modal.find('.a-current-page').first().data().enableDirtyPopover\n        && $modal.find('.a-current-page').first().data().isDirty) {\n        $(this).popover('show');\n      } else {\n        that.closeModal({ target: '#' + $modal[0].id });\n      }\n    });\n\n    $('body').on('click', '.a-js-modal-dirtyBackBtn', function() {\n      AltinnModal.previousModalPage({ target: '#' + $(this).closest('.a-modal')[0].id });\n      $('button[aria-describedby=' + $(this).parent().parent().attr('id') + ']').popover('hide');\n    });\n\n    $('body').on('click', '.a-js-modal-dirtyCancelBtn', function() {\n      $('button[aria-describedby=' + $(this).parent().parent().attr('id') + ']').popover('hide');\n    });\n\n    $('body').on('click', '.a-js-modal-dirtyCloseBtn', function() {\n      AltinnModal.closeModal({ target: '#' + $(this).closest('.a-modal')[0].id });\n      $('button[aria-describedby=' + $(this).parent().parent().attr('id') + ']').popover('hide');\n    });\n\n    function urlQuery(query) { // Parse current URL for query value\n      var _query = query.replace(/[[]/, '[').replace(/[\\]]/, '\\\\]');\n      var expr = '[\\\\?&]' + _query + '=([^&#]*)';\n      var regex = new RegExp(expr);\n      var results = regex.exec(window.location.href);\n      if (results !== null) {\n        return results[1];\n      }\n      return false;\n    }\n    if (urlQuery('form') === '1') {\n      AltinnModal.loadModal({\n        url: '/hjelp/kontaktskjema-for-hjelp/',\n        target: '#modal'\n      });\n    }\n  }\n};\n","/* globals\n  setupExpandContent\n*/\n$('body').on('show.bs.collapse', '.a-collapsePanel-body', function() {\n  var that = this;\n\n  setTimeout(function() {\n    var $collapsePanelHeader = $(that).siblings('.a-js-index-heading').first();\n    var $msgIconWrapper = $collapsePanelHeader.find('.a-inboxHeadingContent')\n    .find('.a-msgIconSecondary')\n    .closest('.a-msgIconWrapper');\n\n    $msgIconWrapper.find('.reg')\n      .hide()\n      .siblings('.a-msgIconSecondary')\n      .show();\n\n    $msgIconWrapper.find('span').attr('aria-hidden', true);\n    $msgIconWrapper.find('span:last-of-type').removeAttr('aria-hidden');\n\n    $('.a-collapsePanel').removeClass('expanded');\n    $(that).closest('.a-collapsePanel').addClass('expanded');\n    $('.a-js-index-heading').addClass('dim');\n    $('.a-collapsePanel.expanded').find('.a-js-index-heading').removeClass('dim');\n    setupExpandContent();\n  }, 0);\n});\n\n$('body').on('hide.bs.collapse', '.a-collapsePanel-body', function() {\n  var that = this;\n  setTimeout(function() {\n    var $collapsePanelHeader = $(that).siblings('.a-js-index-heading').first();\n    $collapsePanelHeader.find('.a-inboxHeadingContent').removeClass('a-msgUnread');\n    $(that).closest('.a-collapsePanel').removeClass('expanded');\n    if ($('.a-collapsePanel.expanded').length === 0) {\n      $('.a-js-index-heading').removeClass('dim');\n    } else {\n      $collapsePanelHeader.addClass('dim');\n    }\n  }, 0);\n});\n","/* globals\n  AltinnModal\n  setupTruncateLines\n  togglePanel\n*/\nwindow.altinnettInit = function() {\n  AltinnModal.init();\n  setupTruncateLines();\n  togglePanel();\n};\n\nwindow.altinnettInit();\n"]}