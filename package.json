{
  "name": "altinn-designsystem",
  "version": "4.2.0",
  "description": "Altinn Design system based on Pattern Lab.",
  "keywords": [
    "Altinn",
    "Atomic Web Design",
    "Design system",
    "Pattern Lab"
  ],
  "license": "MIT",
  "author": "Altinn",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Altinn/DesignSystem.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "pl:build": "patternlab build --config ./patternlab-config.json",
    "pl:help": "patternlab --help",
    "pl:install": "patternlab install --config ./patternlab-config.json",
    "pl:serve": "patternlab serve --config ./patternlab-config.json",
    "pl:version": "patternlab --version",
    "pl:altinn": "patternlab serve --config ./source/_patternlab/altinn/patternlab-config.json",
    "pl:altinndigital": "patternlab serve --config ./source/_patternlab/altinndigital/patternlab-config.json",
    "pl:common": "patternlab serve --config ./source/_patternlab/common/patternlab-config.json",
    "pl:build-all": "patternlab build --config ./source/_patternlab/altinn/patternlab-config.json && patternlab build --config ./source/_patternlab/altinndigital/patternlab-config.json && patternlab build --config ./source/_patternlab/common/patternlab-config.json",
    "clean:dist": "shx rm -rf ./dist/ && shx mkdir ./dist && shx mkdir ./dist/css && shx mkdir ./dist/js",
    "clean:gh-pages": "shx rm -rf ./gh-pages/ && shx mkdir ./gh-pages",
    "clean:public": "shx rm -rf ./public/ && shx mkdir ./public",
    "copy-common:all": "npm run copy-common:altinn && npm run copy-common:altinndigital",
    "copy-common:altinn": "shx rm -rf ./source/_patternlab/altinn/_patterns/felles-komponenter && shx cp -R ./source/_patternlab/common/_patterns/felles-komponenter ./source/_patternlab/altinn/_patterns/",
    "copy-common:altinndigital": "shx rm -rf ./source/_patternlab/altinndigital/_patterns/felles-komponenter && shx cp -R ./source/_patternlab/common/_patterns/felles-komponenter ./source/_patternlab/altinndigital/_patterns/",
    "copy-jquery": "shx cp ./node_modules/jquery/dist/jquery.min.js ./source/js/prototyping/bundles/",
    "update:gh-pages": "npm run prebuild && npm run copy-common:all && npm run pl:build-all && npm run clean:gh-pages && shx cp -R ./public/* ./gh-pages/ && node ./scripts/fix-link-paths.js",
    "dist": "npm run clean:dist && npm run dist:css && npm run dist:js && npm run dist:images && npm run dist:fonts",
    "dist:css": "npm run compile-css && shx cp ./source/css/*.css ./dist/css && npm run minify-css && shx mv ./source/css/*.min.css ./dist/css",
    "dist:fonts": "decompress --out-dir=./dist/fonts/icons/ai/ ./source/fonts/fortAwesome/kit-altinn-no-ed31cded.zip && decompress --out-dir=./dist/fonts/icons/reg/ ./source/fonts/fortAwesome/kit-altinn-reg-no-df832575.zip",
    "dist:images": "shx cp -r ./source/images ./dist/",
    "dist:js": "npm run bundle-js:production && shx cp ./source/js/production/bundles/*.js ./dist/js && shx cp -r ./source/js/production/bundles/maps ./dist/js",
    "compile-css": "sass ./source/css/scss:./source/css/ --style=expanded && postcss ./source/css/*.css --use autoprefixer --replace --map",
    "minify-css": "cleancss --batch --batch-suffix .min ./source/css/*.css",
    "bundle-js:prototyping": "node ./scripts/bundle-js.js",
    "bundle-js:production": "node ./scripts/bundle-js.js --production",
    "prebuild": "npm run clean:public && npm run compile-css && npm run bundle-js:prototyping && npm run copy-jquery",
    "watch-css": "chokidar \"./source/css/**/*.scss\" -c \"npm run compile-css\"",
    "watch-js": "chokidar \"./source/js/prototyping/modules/*.js\" -c \"npm run bundle-js:prototyping\"",
    "start:altinn": "npm run prebuild && npm run copy-common:altinn && concurrently -p \"[{name}]\" -n \"patternlab\" \"npm run pl:altinn\" \"npm run watch-*\"",
    "start:altinndigital": "npm run prebuild && npm run copy-common:altinndigital && concurrently -p \"[{name}]\" -n \"patternlab\" \"npm run pl:altinndigital\" \"npm run watch-*\"",
    "start:common": "npm run prebuild && concurrently -p \"[{name}]\" -n \"patternlab\" \"npm run pl:common\" \"npm run watch-*\""
  },
  "dependencies": {
    "@pattern-lab/cli": "^5.15.0",
    "@pattern-lab/core": "^5.15.0",
    "@pattern-lab/engine-handlebars": "^5.14.3",
    "@pattern-lab/starterkit-handlebars-vanilla": "^1.4.2",
    "@pattern-lab/uikit-workshop": "^5.15.0"
  },
  "devDependencies": {
    "anchor-js": "^4.3.1",
    "autoprefixer": "^10.3.7",
    "bootstrap": "^4.6.0",
    "bootstrap-datepicker": "^1.9.0",
    "chokidar-cli": "^3.0.0",
    "clean-css-cli": "^5.4.1",
    "clipboard": "^2.0.8",
    "concat-with-sourcemaps": "^1.1.0",
    "concurrently": "^6.3.0",
    "decompress-cli": "^2.0.0",
    "jquery-ui": "^1.12.1",
    "jquery-validation": "^1.19.3",
    "jquery-validation-unobtrusive": "^3.2.12",
    "mark.js": "^8.11.1",
    "postcss": "^8.3.9",
    "postcss-cli": "^10.0.0",
    "sass": "^1.42.1",
    "shx": "^0.3.3",
    "slick-carousel": "^1.8.1",
    "truncate.js": "^1.1.2",
    "yargs": "^17.2.1"
  }
}
