    <!-- DO NOT REMOVE -->
    {{{ patternLabFoot }}}
	  <!-- JQUERY -->
    <script src="../../js/jquery.min.js"></script>
    <!-- TETHER -->
    <script src="../../js/tether.min.js"></script>
    <!-- BOOTSTRAP -->
    <script src="../../js/bootstrap.min.js"></script>
    <!-- CODE PRETTIFY: Prettify code snippets in HTML -->
    <script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?lang=css&amp;skin=sunburst"></script>
    <script>
      $('.html-escape').each(function () { $(this).text($(this).html()) })
    </script>
    <!-- VALIDATOR: Used for input field feedback -->
    <!-- http://1000hz.github.io/bootstrap-validator/#validator-usage -->
    <script src="../../js/validator.min.js"></script>
    <!-- DATEPICKER: Used for date input fields -->
    <script src="../../js/bootstrap-datepicker.min.js"></script>
    <!-- SMOOTH STATE: Prevent links from triggering a full page load -->
    <!-- https://github.com/miguel-perez/smoothState.js -->
    <script src="../../js/jquery.smoothState.min.js"></script>
    <!-- ANCHOR LINKS: Generate deep anchor links on titles -->
    <!-- http://bryanbraun.github.io/anchorjs/#basic-link-left -->
    <script src="../../js/anchor.min.js"></script>
    <!-- FOUNDATION interchange -->
    <!-- <script src="../../js/foundationInterchange.min.js"></script> -->
    <!-- FOUNDATION responsive menu -->
    <script src="../../js/foundationNavigation.min.js"></script>
    <!-- ALTINN custom JavaScript -->
    <script src="../../js/altinnProd.js"></script>
    <script src="../../js/altinnDev.js"></script>
    <script>
      $(document).foundation();
      var smoothStateMod = function () {
        $('#smoothState').find('a:not(.sr-only-focusable)').on('click', function (e) {
          if (location.pathname.replace(/\//g, '')
            === $(this).attr('href').replace(/\//g, '').replace(/\.\./g, '')) {
            e.preventDefault(); e.stopPropagation()
            e.stopImmediatePropagation()
            return false
          } else if ($(this).attr('href') !== '#') {
            e.preventDefault(); e.stopPropagation()
            e.stopImmediatePropagation()
            smoothState.load($(this).attr('href'));
          }
        })
      }
      var options = {
        prefetch: true, debug: true, anchors: 'blink', cacheLength: 9,
        onStart: {
          duration: 250, // Duration of our animation
          render: function ($container) {
            // Add your CSS animation reversing class
            $container.addClass('is-exiting');
            // Restart your animation
            smoothState.restartCSSAnimations();
            if ($container.find('.a-tempAnim').length > 0) {
              $container.find('.a-scene_element')
                .removeClass('a-scene_element--fadeinright')
                .removeClass('a-scene_element--fadeinleft')
                .addClass('a-scene_element--fadeoutright')
            } else {
              $container.find('.a-scene_element')
                .removeClass('a-scene_element--fadeinright')
                .removeClass('a-scene_element--fadeinleft')
                .addClass('a-scene_element--fadeoutleft')
            }
          }
        },
        onReady: {
          duration: 0,
          render: function ($container, $newContent) {
            // Remove your CSS animation reversing class
            $container.removeClass('is-exiting');
            // Inject the new content
            $newContent.find('.a-scene_element--fadeinright').hide()
            if ($container.find('.a-tempAnim').length > 0) {
              $newContent.find('.a-scene_element')
                .removeClass('a-scene_element--fadeinright')
                .addClass('a-scene_element--fadeinleft')
                .removeClass('a-tempAnim')
            }
            $container.html($newContent);
          }
        },
        onAfter: function () {
          $(document).foundation(); altinnInit(); altinnDev(); smoothStateMod()
          $('.a-scene_element').show()
        }
      }
      var smoothState = $('#smoothState').smoothState(options)
        .data('smoothState')
      smoothStateMod()
    </script>
  </body>
</html>
