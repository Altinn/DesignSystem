<div class="a-panel a-text">
	<h3>Bootstrap grid</h3>
	<p class="lead">Bootstrap includes a powerful mobile-first grid system for building layouts of all shapes and sizes. It’s based on a 12 column layout and has multiple tiers, one for each media query range. </p>
	<p>
		
	</p>
</div>
<div id="accordion" role="tablist" aria-multiselectable="true">
	<div class="panel panel-default a-collapse">
		<div role="tab" id="headingOne">
			<a class="a-collapseBtn collapsed" data-toggle="collapse" data-parent="#accordion" data-target="#collapseOne" href="#" aria-expanded="false" aria-controls="collapseOne">
				
				<i class="material-icons a-collapse-icon">&#xE3EC;</i>How to use the grid<i class="material-icons a-collapse-arrowDown">&#xE313;</i><i class="material-icons a-collapse-arrowUp">&#xE316;</i>
			</a>
		</div>
		<div id="collapseOne" class="panel-collapse a-collapsePanel collapse" role="tabpanel" aria-labelledby="headingTwo">
			<div class="a-text a-collapsePanel-content">
				<ul style="margin-left: 0;">
					<li>There are three major components—containers, rows, and columns.</li>
					<li>Containers—<code class="highlighter-rouge">.container</code> for fixed width or <code class="highlighter-rouge">.container-fluid</code> for full width—center your site’s contents and help align your grid content.</li>
					<li>Rows are horizontal groups of columns that ensure your columns are lined up properly.</li>
					<li>Content should be placed within columns, and only columns may be immediate children of rows.</li>
					<li>Column classes indicate the number of columns you’d like to use out of the possible 12 per row. So if you want three equal-width columns, you’d use <code class="highlighter-rouge">.col-sm-4</code>.</li>
					<li>Column <code class="highlighter-rouge">width</code>s are set in percentages, so they’re always fluid and sized relative to their parent element.</li>
					<li>Columns have horizontal <code class="highlighter-rouge">padding</code> to create the gutters between individual columns.</li>
					<li>There are five grid tiers, one for each responsive breakpoint</a>: extra small, small, medium, large, and extra large.</li>
					<li>Grid tiers are based on minimum widths, meaning they apply to that one tier and all those above it (e.g., <code class="highlighter-rouge">.col-sm-4</code> applies to small, medium, large, and extra large devices).</li>
					<li>You can use predefined grid classes or Sass mixins for more semantic markup.</li>
				</ul>
			</div>
		</div>
	</div>
	<div class="panel panel-default a-collapse">
		<div role="tab" id="headingTwo">
			<a class="a-collapseBtn collapsed" data-toggle="collapse" data-parent="#accordion" data-target="#collapseTwo" href="#"  aria-expanded="false" aria-controls="collapseTwo">
				
				<i class="material-icons a-collapse-icon">&#xE915;</i>Basic examples<i class="material-icons a-collapse-arrowDown">&#xE313;</i><i class="material-icons a-collapse-arrowUp">&#xE316;</i>
			</a>
		</div>
		<div id="collapseTwo" class="panel-collapse a-collapsePanel collapse" role="tabpanel" aria-labelledby="headingTwo">
			<div class="a-text a-collapsePanel-content">
			<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="c">&lt;!-- Stack the columns on mobile by making one full-width and the other half-width --&gt;</span>
				<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span class="nt">&gt;</span>
				  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-xs-12 col-md-8"</span><span class="nt">&gt;</span>.col-xs-12 .col-md-8<span class="nt">&lt;/div&gt;</span>
				  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-xs-6 col-md-4"</span><span class="nt">&gt;</span>.col-xs-6 .col-md-4<span class="nt">&lt;/div&gt;</span>
				<span class="nt">&lt;/div&gt;</span>
				<span class="c">&lt;!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop --&gt;</span>
				<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span class="nt">&gt;</span>
				  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-xs-6 col-md-4"</span><span class="nt">&gt;</span>.col-xs-6 .col-md-4<span class="nt">&lt;/div&gt;</span>
				  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-xs-6 col-md-4"</span><span class="nt">&gt;</span>.col-xs-6 .col-md-4<span class="nt">&lt;/div&gt;</span>
				  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-xs-6 col-md-4"</span><span class="nt">&gt;</span>.col-xs-6 .col-md-4<span class="nt">&lt;/div&gt;</span>
				<span class="nt">&lt;/div&gt;</span>
				<span class="c">&lt;!-- Columns are always 50% wide, on mobile and desktop --&gt;</span>
				<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span class="nt">&gt;</span>
				  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-xs-6"</span><span class="nt">&gt;</span>.col-xs-6<span class="nt">&lt;/div&gt;</span>
				  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-xs-6"</span><span class="nt">&gt;</span>.col-xs-6<span class="nt">&lt;/div&gt;</span>
				<span class="nt">&lt;/div&gt;</span></code></pre></div>
			</div>
		</div>
	</div>
	<div class="panel panel-default a-collapse">
		<div role="tab" id="headingThree">
			<a class="a-collapseBtn collapsed" data-toggle="collapse" data-parent="#accordion" data-target="#collapseThree" href="#" aria-expanded="false" aria-controls="collapseThree">
				
				<i class="material-icons a-collapse-icon">&#xE0D6;</i>Altinn Breakpoints<i class="material-icons a-collapse-arrowDown">&#xE313;</i><i class="material-icons a-collapse-arrowUp">&#xE316;</i>
			</a>
		</div>
		<div id="collapseThree" class="panel-collapse a-collapsePanel collapse" role="tabpanel" aria-labelledby="headingThree">
			<div class="a-text a-collapsePanel-content">
				<div class="table-responsive">
					<table class="table table-bordered table-striped">
						<thead>
							<tr>
								<th></th>
								<th class="text-xs-center">
									Extra small<br>
									<small>&lt;544px</small>
								</th>
								<th class="text-xs-center">
									Small<br>
									<small>≥544px</small>
								</th>
								<th class="text-xs-center">
									Medium<br>
									<small>≥768px</small>
								</th>
								<th class="text-xs-center">
									Large<br>
									<small>≥992px</small>
								</th>
								<th class="text-xs-center">
									Extra large<br>
									<small>≥1200px</small>
								</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<th class="text-nowrap" scope="row">Grid behavior</th>
								<td>Horizontal at all times</td>
								<td colspan="4">Collapsed to start, horizontal above breakpoints</td>
							</tr>
							<tr>
								<th class="text-nowrap" scope="row">Container width</th>
								<td>None (auto)</td>
								<td>576px</td>
								<td>720px</td>
								<td>940px</td>
								<td>1140px</td>
							</tr>
							<tr>
								<th class="text-nowrap" scope="row">Class prefix</th>
								<td><code>.col-xs-</code></td>
								<td><code>.col-sm-</code></td>
								<td><code>.col-md-</code></td>
								<td><code>.col-lg-</code></td>
								<td><code>.col-xl-</code></td>
							</tr>
							<tr>
								<th class="text-nowrap" scope="row"># of columns</th>
								<td colspan="5">12</td>
							</tr>
							<tr>
								<th class="text-nowrap" scope="row">Gutter width</th>
								<td colspan="5">1.875rem / 30px (15px on each side of a column)</td>
							</tr>
							<tr>
								<th class="text-nowrap" scope="row">Nestable</th>
								<td colspan="5">Yes</td>
							</tr>
							<tr>
								<th class="text-nowrap" scope="row">Offsets</th>
								<td colspan="5">Yes</td>
							</tr>
							<tr>
								<th class="text-nowrap" scope="row">Column ordering</th>
								<td colspan="5">Yes</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>
</div>